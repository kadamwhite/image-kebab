{"version":3,"sources":["components/Skewer/index.js","constants.js","matrix.js","store/selectors.js","containers/Skewer.js","store/actions.js","components/DragHandle/index.js","containers/DragHandle.js","helpers.js","components/DropTarget/index.js","containers/DropTarget.js","containers/DropZone.js","containers/App/index.js","store/reducers/image.js","store/reducers/index.js","store/reducers/handles.js","store/index.js","serviceWorker.js","index.js"],"names":["Skewer","_ref","children","height","src","width","matrixTransform","react_default","a","createElement","className","alt","style","transform","defaultProps","tl","corners","numeric","window","getTransform","deltas","fromPoint","x","y","toPoint","map","delta","idx","original","H","A","reduce","memo","_ref3","to","concat","Object","toConsumableArray","B","_ref4","h","solve","calculateMatrix","matrix3d","col","row","push","join","imageSource","state","image","imageWidth","imageHeight","handle","corner","handles","cornerX","cornerY","memoize","start","imageCorner","end","cornerDelta","connect","setImage","type","payload","DragHandle","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dragging","onMouseDown","bind","assertThisInitialized","onMouseMove","addEventListener","removeEventListener","clientX","clientY","onDrag","evt","preventDefault","setState","_this2","_this$props","classNames","ref","node","el","top","left","PureComponent","ownProps","dispatch","moveHandle","computeCorners","screenWidth","innerWidth","screenHeight","innerHeight","scaleX","Math","min","scaleY","scale","scaledWidth","scaledHeight","defineProperty","readAsImage","file","Promise","resolve","reject","reader","FileReader","onload","target","result","img","Image","onerror","err","then","catch","onabort","readAsDataURL","DropTarget","onChange","files","react","onDrop","acceptedFiles","react_drop_to_upload_es5_default","imageLoaded","containers_DropZone","containers_Skewer","containers_DragHandle","key","containers_DropTarget","href","initialState","objectSpread","combineReducers","arguments","length","undefined","action","_action$payload","_action$payload2","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","es","store","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79303830.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Skewer = ( {\n\tchildren,\n\theight,\n\tsrc,\n\twidth,\n\tmatrixTransform,\n} ) => ( ! src ? null : (\n\t<div className=\"skewer\">\n\t\t{ children }\n\t\t<img\n\t\t\talt=\"skewable\"\n\t\t\tstyle={ {\n\t\t\t\ttransform: matrixTransform,\n\t\t\t} }\n\t\t\tsrc={ src }\n\t\t\twidth={ width }\n\t\t\theight={ height }\n\t\t/>\n\t</div>\n) );\n\nSkewer.propTypes = {\n\tsrc: PropTypes.string.isRequired,\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tmatrixTransform: PropTypes.string.isRequired,\n\tchildren: PropTypes.node,\n};\n\nSkewer.defaultProps = {\n\tchildren: null,\n};\n\nexport default Skewer;\n","// Corners (top left, top right, bottom right, bottom left)\nexport const bl = 'bl';\nexport const br = 'br';\nexport const tl = 'tl';\nexport const tr = 'tr';\n\n// This ordering is dictated by calculateMatrix() in matrix.js.\nexport const corners = [ tl, bl, tr, br ];\n","const numeric = window.numeric;\n\nexport const pairToPoint = ( [ x, y ] ) => ( { x, y } );\n\n/**\n * Generate the transformation array.\n *\n * Adapted from https://franklinta.com/2014/09/08/computing-css-matrix3d-transforms/\n * Both fromPoint and toPoint must be ordered the same\n * (top left, bottom left, top right, bottom right)\n *\n * @param {Object[]} fromPoint Array of { x, y } objects representing the original corners.\n * @param {Object[]} toPoint   Array of { x, y } objects representing the transformed corners.\n */\nexport const calculateMatrix = ( fromPoint, toPoint ) => {\n  // console.assert( fromPoint.length === 4 & toPoint.length === 4 );\n\n  // Creates 8x8 array.\n  const A = fromPoint.reduce( ( memo, { x, y }, idx ) => {\n    const to = toPoint[ idx ];\n    return [\n      ...memo,\n      [x, y, 1, 0, 0, 0, -x * to.x, -y * to.x ],\n      [0, 0, 0, x, y, 1, -x * to.y, -y * to.y ],\n    ];\n  }, [] );\n\n  const B = toPoint.reduce(\n    ( memo, { x, y } ) => [ ...memo, x, y ],\n    []\n  );\n\n  // Solve A * h = B for h\n  const h = numeric.solve( A, B );\n\n  const H = [\n    [ h[0], h[1], 0, h[2] ],\n    [ h[3], h[4], 0, h[5] ],\n    [    0,    0, 1,    0 ],\n    [ h[6], h[7], 0,    1 ],\n  ];\n\n  // // Sanity check that H actually maps `fromPoint` to `toPoint`\n  // // TODO: Try disabling for performance?\n  // for ( let i = 0; i < 4; i++ ) {\n  //   const { x: fromX, y: fromY } = fromPoint[ i ];\n  //   const { x: toX, y: toY } = toPoint[ i ];\n  //   const lhs = numeric.dot( H, [ fromX, fromY, 0, 1 ] );\n  //   const k_i = lhs[ 3 ];\n  //   const rhs = numeric.dot( k_i, [ toX, toY, 0, 1 ] );\n  //   console.assert( numeric.norm2( numeric.sub( lhs, rhs ) ) < 1e-9, \"Not equal:\", lhs, rhs );\n  // }\n\n  return H;\n};\n\n/**\n * Render a matrix3d transform string.\n *\n * Both fromPoint and toPoint must be ordered the same\n * (top left, bottom left, top right, bottom right)\n *\n * @param {Object[]} fromPoint Array of { x, y } objects representing the original corners.\n * @param {Object[]} toPoint   Array of { x, y } objects representing the transformed corners.\n * @return {String} matrix3d transform string.\n */\nexport const getTransform = ( width, height, deltas ) => {\n  // Both fromPoint and toPoint must be ordered the same\n  // (top left, bottom left, top right, bottom right)\n  const fromPoint = [\n    { x: 0, y: 0 },\n    { x: 0, y: height },\n    { x: width, y: 0 },\n    { x: width, y: height },\n  ];\n  const toPoint = deltas.map( ( delta, idx ) => {\n    const original = fromPoint[ idx ];\n    return {\n      x: original.x + delta.x,\n      y: original.y + delta.y,\n    };\n\t} );\n\n  // Calculate transformation matrix and reduce to matrix3d transform syntax.\n  const H = calculateMatrix( fromPoint, toPoint );\n\n  let matrix3d = [];\n  for ( let col = 0; col < 4; col++ ) {\n    for ( let row = 0; row < 4; row++ ) {\n      matrix3d.push( H[row][col] );\n    }\n  }\n  return `matrix3d(${ matrix3d.join( ',' ) })`;\n};\n","import memoize from 'lodash.memoize';\n\nimport { tl, tr, bl, corners } from '../constants';\nimport { getTransform } from '../matrix';\n\nexport const imageSource = ( state ) => state.image.src;\nexport const imageWidth = ( state ) =>\n\tstate.image.corners[ tr ].x - state.image.corners[ tl ].x;\nexport const imageHeight = ( state ) =>\n\tstate.image.corners[ bl ].y - state.image.corners[ tl ].y;\nexport const imageCorner = ( state, corner ) => state.image.corners[ corner ];\n\nexport const handle = ( state, corner ) => state.handles[ corner ];\n\nconst cornerDelta = ( state, corner ) => {\n\tconst start = imageCorner( state, corner );\n\tconst end = handle( state, corner );\n\treturn {\n\t\tx: end.x - start.x,\n\t\ty: end.y - start.y,\n\t};\n};\n\nexport const cornerX = ( state, corner ) => handle( state, corner ).x;\nexport const cornerY = ( state, corner ) => handle( state, corner ).y;\n\nexport const fromPoint = memoize( ( width, height ) => [\n\t{ x: 0, y: 0 },\n\t{ x: 0, y: height },\n\t{ x: width, y: 0 },\n\t{ x: width, y: height },\n] );\n\nexport const matrixTransform = ( state ) => {\n\tconst width = imageWidth( state );\n\tconst height = imageHeight( state );\n\tconst deltas = corners.map( corner => cornerDelta( state, corner ) );\n\treturn getTransform( width, height, deltas );\n};\n","import { connect } from 'react-redux';\nimport Skewer from '../components/Skewer';\n\nimport {\n\timageWidth,\n\timageSource,\n\timageHeight,\n\tmatrixTransform,\n} from '../store/selectors';\n\nconst mapStateToProps = ( state ) => ( {\n\tsrc: imageSource( state ),\n\twidth: imageWidth( state ),\n\theight: imageHeight( state ),\n\tmatrixTransform: matrixTransform( state ),\n} );\n\nexport default connect( mapStateToProps )( Skewer );\n","import { tl, tr, bl, br } from '../constants';\n\nexport const MOVE_HANDLE = 'MOVE_HANDLE';\nexport const moveHandle = ( corner, x, y ) => ( {\n  type: MOVE_HANDLE,\n  payload: {\n    corner,\n    x,\n    y,\n  },\n} );\n\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const setImage = ( image ) => ( {\n  type: SET_IMAGE,\n  payload: image,\n} );\n\nexport const SET_IMAGE_POSITION = 'SET_IMAGE_POSITION';\nexport const setImagePosition = ( clientRect ) => {\n  const { x, y, width, height } = clientRect;\n  const payload = {\n    [ tl ]: {\n      x: x,\n      y: y,\n    },\n    [ tr ]: {\n      x: x + width,\n      y: y,\n    },\n    [ br ]: {\n      x: x + width,\n      y: y + height,\n    },\n    [ bl ]: {\n      x: x,\n      y: y + height,\n    },\n  };\n\n  return {\n    type: SET_IMAGE_POSITION,\n    payload,\n  };\n};\n\nexport const RESIZE_SCREEN = 'RESIZE_SCREEN';\nexport const resizeScreen = ( width, height ) => ( {\n\ttype: RESIZE_SCREEN,\n\tpayload: {\n\t\twidth,\n\t\theight,\n\t},\n} );\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\n\nimport './style.css';\n\nclass DragHandle extends PureComponent {\n  constructor( props ) {\n    super( props );\n\n    this.state = {\n      dragging: false,\n    };\n\n\t\tthis.dragging = false;\n\n    this.onMouseDown = this.onMouseDown.bind( this );\n    this.onMouseMove = this.onMouseMove.bind( this );\n    // this.onMouseUp = this.onMouseUp.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener( 'mousemove', this.onMouseMove );\n\t\t// window.addEventListener( 'mouseup', this.onMouseUp );\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'mousemove', this.onMouseMove );\n\t\t// window.removeEventListener( 'mouseup', this.onMouseUp );\n\t}\n\n  onDrag( clientX, clientY ) {\n    if ( ! this.state.dragging || typeof this.props.onDrag !== 'function' ) {\n      return;\n    }\n    this.props.onDrag( clientX, clientY );\n  }\n\n  onMouseDown( evt ) {\n\t\tevt.preventDefault();\n\t\tif ( ! this.state.dragging ) {\n\t\t\tthis.setState( {\n\t\t\t\tdragging: true,\n\t\t\t} );\n\t\t\tthis.x = evt.clientX;\n\t\t\tthis.y = evt.clientY;\n\t\t} else {\n\t\t\tthis.setState( {\n\t\t\t\tdragging: false,\n\t\t\t} );\n\t\t}\n  }\n\n  onMouseMove( evt ) {\n\t\tif ( this.state.dragging ) {\n\t\t\tthis.onDrag( evt.clientX, evt.clientY );\n\t\t}\n  }\n\n  // onMouseUp( evt ) {\n  //   if ( this.state.dragging ) {\n  //     this.onDrag( evt.clientX, evt.clientY );\n  //   }\n  //   this.setState( {\n  //     dragging: false,\n  //   } );\n  // }\n\n  render() {\n\t\tconst { x, y } = this.props;\n\t\tconst { dragging } = this.state;\n    return (\n      <div\n        className={ classNames( 'draghandle', { dragging } ) }\n        ref={ node => { this.el = node; } }\n        style={ {\n          top: y,\n          left: x,\n        } }\n\t\t\t\tonMouseDown={ this.onMouseDown }\n\t\t\t/>\n    );\n  }\n}\n\nDragHandle.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  corner: PropTypes.string.isRequired,\n  onDrag: PropTypes.func.isRequired,\n};\n\nexport default DragHandle;\n","import { connect } from 'react-redux';\n\nimport { cornerX, cornerY } from '../store/selectors';\nimport { moveHandle } from '../store/actions';\nimport DragHandle from '../components/DragHandle';\n\nconst mapStateToProps = ( state, ownProps ) => {\n\treturn {\n\t\tx: cornerX( state, ownProps.corner ),\n\t\ty: cornerY( state, ownProps.corner ),\n\t};\n};\n\nconst mapDispatchToProps = ( dispatch, ownProps ) => ( {\n\tonDrag( x, y ) {\n\t\tdispatch( moveHandle( ownProps.corner, x, y ) );\n\t}\n} );\n\nexport default connect( mapStateToProps, mapDispatchToProps )( DragHandle );\n","import { corners, tl, tr, bl, br } from './constants';\n\nexport const clone = obj => JSON.parse( JSON.stringify( obj ) );\n\nexport const makeCornersXYObjects = () => corners.reduce( ( state, corner ) => ( {\n\t...state,\n\t[ corner ]: {\n\t\tx: 0,\n\t\ty: 0,\n\t},\n} ), {} );\n\nexport const computeCorners = ( width, height ) => {\n\tconst screenWidth = window.innerWidth;\n\tconst screenHeight = window.innerHeight;\n\n\t// Cap image long edge to 90% of available space\n\tconst scaleX = Math.min( width, screenWidth * 0.9 ) / width;\n\tconst scaleY = Math.min( height, screenHeight * 0.9 ) / height;\n\tconst scale = Math.min( scaleX, scaleY );\n\n\tconst scaledWidth = scale * width;\n\tconst scaledHeight = scale * height;\n\tconst top = ( screenHeight - scaledHeight ) / 2;\n\tconst left = ( screenWidth - scaledWidth ) / 2;\n\treturn {\n\t\t[ tl ]: {\n\t\t\tx: left,\n\t\t\ty: top,\n\t\t},\n\t\t[ tr ]: {\n\t\t\tx: left + scaledWidth,\n\t\t\ty: top,\n\t\t},\n\t\t[ bl ]: {\n\t\t\tx: left,\n\t\t\ty: top + scaledHeight,\n\t\t},\n\t\t[ br ]: {\n\t\t\tx: left + scaledWidth,\n\t\t\ty: top + scaledHeight,\n\t\t},\n\t};\n};\n\nexport const loadImage = src => new Promise( ( resolve, reject ) => {\n\tconst img = new Image();\n\timg.onload = function() {\n\t\tresolve( {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tsrc,\n\t\t} );\n\t};\n\timg.onerror = ( err ) => reject( err );\n\n\t// Start loading the image\n\timg.src = src;\n} );\n\nexport const readAsImage = file => new Promise( ( resolve, reject ) => {\n\tconst reader = new FileReader();\n\treader.onload = evt => {\n\t\tloadImage( evt.target.result )\n\t\t\t.then( resolve )\n\t\t\t.catch( reject );\n\t};\n\treader.onabort = () => reject( 'File read aborted' );\n\treader.onerror = () => reject( 'File read failed' );\n\n\t// Start reading the file\n\treader.readAsDataURL( file );\n} );\n","import React from 'react';\n\nimport './style.css';\n\nexport default () => (\n\t<div className=\"dropzone-placeholder\" />\n);\n","import { connect } from 'react-redux';\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { readAsImage } from '../helpers';\nimport { setImage } from '../store/actions';\nimport DropTarget from '../components/DropTarget';\n\nconst mapDispatchToProps = ( dispatch ) => ( {\n\tonChange( evt ) {\n\t\treadAsImage( evt.target.files[0] ).then( image => dispatch( setImage( image ) ) );\n\t},\n} );\n\nexport const DropTargetContainer = ( { onChange } ) => (\n\t<Fragment>\n\t\t<DropTarget />\n\t\t<input\n\t\t\tclassName=\"image-upload-button\"\n\t\t\ttype=\"file\"\n\t\t\tonChange={ onChange }\n\t\t/>\n\t</Fragment>\n);\n\nDropTargetContainer.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default connect( null, mapDispatchToProps )( DropTargetContainer );\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport DropToUpload from 'react-drop-to-upload';\nimport PropTypes from 'prop-types';\n\nimport { setImage } from '../store/actions';\nimport { readAsImage } from '../helpers';\n\nconst mapDispatchToProps = ( dispatch ) => ( {\n\tonDrop( acceptedFiles ) {\n\t\treadAsImage( acceptedFiles[ 0 ] ).then( image => dispatch( setImage( image ) ) );\n\t},\n} );\n\nexport const DropZone = ( { children, onDrop } ) => (\n\t<DropToUpload\n\t\tclassName=\"dropzone\"\n\t\tonDrop={ onDrop }\n\t>\n\t\t{ children }\n\t</DropToUpload>\n);\n\nDropZone.propTypes = {\n\tonDrop: PropTypes.func.isRequired,\n\tchildren: PropTypes.node,\n};\n\nexport default connect( null, mapDispatchToProps )( DropZone );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SkewerContainer from '../Skewer';\nimport DragHandleContainer from '../DragHandle';\nimport DropTargetContainer from '../DropTarget';\nimport DropZone from '../DropZone';\n\nimport { corners } from '../../constants';\n\nimport './style.css';\n\nconst mapStateToProps = ( state ) => ( {\n\timageLoaded: ! ! state.image.src,\n} );\n\nexport const App = ( { imageLoaded } ) => (\n\t<DropZone>\n\t\t<div className=\"App\">\n\t\t\t{ imageLoaded ? (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<SkewerContainer />\n\t\t\t\t\t{ corners.map( ( corner ) => (\n\t\t\t\t\t\t<DragHandleContainer\n\t\t\t\t\t\t\tkey={ `handle-${ corner }` }\n\t\t\t\t\t\t\tcorner={ corner }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) ) }\n\t\t\t\t</Fragment>\n\t\t\t) : (\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<h1>Image Kebab<em>!</em></h1>\n\n\t\t\t\t\t<DropTargetContainer />\n\n\t\t\t\t\t<p>Drag-and-drop the image to skewer into this browser window.</p>\n\n\t\t\t\t\t<small className=\"attribution\">\n\t\t\t\t\t\t<a href=\"https://www.vexels.com/vectors/preview/132102/shish-kebab-icon\">Shish kebab icon</a> designed by Vexels\n\t\t\t\t\t</small>\n\t\t\t\t</header>\n\t\t\t) }\n\t\t</div>\n\t</DropZone>\n);\n\nApp.propTypes = {\n\timageLoaded: PropTypes.bool.isRequired,\n};\n\nexport default connect( mapStateToProps )( App );\n","import { SET_IMAGE } from '../actions';\nimport { computeCorners, makeCornersXYObjects } from '../../helpers';\n\nconst initialState = {\n\tsrc: '',\n\twidth: 0,\n\theight: 0,\n\tcorners: makeCornersXYObjects(),\n};\n\nexport default ( state = initialState, action = {} ) => {\n\tif ( action.type === SET_IMAGE ) {\n\t\tconst { src, width, height } = action.payload;\n\t\treturn {\n\t\t\tsrc,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tcorners: computeCorners( width, height ),\n\t\t};\n\t}\n\n\treturn state;\n};\n","import { combineReducers } from 'redux';\n\nimport handles from './handles';\nimport image from './image';\n\nexport default combineReducers( {\n\thandles,\n\timage,\n} );\n","import { MOVE_HANDLE, SET_IMAGE } from '../actions';\nimport { computeCorners } from '../../helpers';\n\n\nexport default ( state = null, action = {} ) => {\n\tif ( action.type === SET_IMAGE ) {\n\t\tif ( state ) {\n\t\t\t// Once initialized, do not reset handle positions when image changes.\n\t\t\treturn state;\n\t\t}\n\t\tconst { width, height } = action.payload;\n\t\treturn computeCorners( width, height );\n\t}\n\n\tif ( action.type === MOVE_HANDLE ) {\n\t\tconst { corner, x, y } = action.payload;\n\t\tif ( state && state[ corner ].x === x && state[ corner ].y === y ) {\n\t\t\t// May fire more often than an actual update is needed.\n\t\t\treturn state;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ corner ]: {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t},\n\t\t};\n\t}\n\treturn state;\n}\n","import { createStore } from 'redux';\n\nimport rootReducer from './reducers';\n\nexport default createStore(\n\trootReducer,\n\t/* eslint-disable no-underscore-dangle */\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t/* eslint-enable no-underscore-dangle */\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './containers/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render( (\n\t<Provider store={ store }>\n\t\t<App />\n\t</Provider>\n), document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}