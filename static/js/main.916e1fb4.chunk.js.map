{"version":3,"sources":["components/DropZone/index.js","components/DragZone/index.js","components/Skewer/index.js","App.js","serviceWorker.js","index.js"],"names":["DropZone","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDrop","bind","assertThisInitialized","acceptedFiles","parentOnDrop","forEach","file","reader","FileReader","onload","e","img","Image","src","width","height","target","result","onabort","console","log","onerror","readAsDataURL","react_default","a","createElement","es","className","PureComponent","DragZone","state","dragging","onMouseDown","onMouseMove","onMouseUp","zones","_this$el$getBoundingC","el","getBoundingClientRect","length","x","y","_this$el$getBoundingC2","top","left","_this$getZoneDimensio","getZoneDimensions","col","Math","floor","row","_this$getZoneCoordina","getZoneCoordinates","clientX","clientY","onDrag","evt","setState","getZone","preview","_this$getZoneDimensio2","_this$getZoneCoordina2","_this$state","_this$getZoneDimensio3","style","_this2","ref","node","classNames","renderPreview","numeric","window","pairToPoint","_ref","_ref2","slicedToArray","getTransform","transforms","fromPoint","toPoint","tl","bl","tr","br","map","delta","idx","original","H","A","reduce","memo","_ref3","to","toConsumableArray","concat","B","_ref4","h","solve","calculateMatrix","matrix3d","push","join","Skewer","move","computedImageWidth","computedImageHeight","_node$getBoundingClie","corner","_ref6","_ref5","dx","dy","includes","_transforms$corner","objectSpread","defineProperty","error","image","_this$props$image","components_DragZone","alt","setComputedImageSize","transform","App","setImage","components_Skewer","components_DropZone","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.916e1fb4.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'; \nimport Dropzone from 'react-dropzone';\n\nimport './style.css';\n\nclass DropZone extends PureComponent {\n  constructor( props ) {\n    super( props );\n    this.onDrop = this.onDrop.bind( this );\n  }\n\n  onDrop( acceptedFiles ) {\n    const parentOnDrop = this.props.onDrop;\n    acceptedFiles.forEach( file => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        img.onload = function() {\n          parentOnDrop( {\n            src: img.src,\n            width: this.width,\n            height: this.height,\n          } );\n        };\n        img.src = e.target.result;\n      };\n      reader.onabort = () => console.log( 'file reading was aborted' );\n      reader.onerror = () => console.log( 'file reading has failed' );\n\n      reader.readAsDataURL( file );\n    } );\n  }\n\n  render() {\n    return (\n      <Dropzone onDrop={ this.onDrop }>\n        <div className=\"dropzone-placeholder\" />\n      </Dropzone>\n    );\n  }\n}\n\nexport default DropZone;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nimport './style.css';\n\nclass DragZone extends PureComponent {\n  constructor( props ) {\n    super( props );\n\n    this.state = {\n      dragging: false,\n    };\n\n    this.dragging = false;\n\n    this.onMouseDown = this.onMouseDown.bind( this );\n    this.onMouseMove = this.onMouseMove.bind( this );\n    this.onMouseUp = this.onMouseUp.bind( this );\n  }\n \n  /**\n   * Get the pixel dimensions (width & height) of one zone section.\n   * \n   * @return {Object} An object with .height and .width pixel dimension properties.\n   */\n  getZoneDimensions() {\n    const { zones } = this.props;\n    const { width, height } = this.el.getBoundingClientRect();\n\n    return {\n      height: height / zones.length,\n      width: width / zones[ 0 ].length,\n    };\n  }\n\n  /**\n   * Get the row and column number of a zone based on input coordinates.\n   *\n   * @param {Number} x The clientX position value.\n   * @param {Number} y The clientY position value.\n   * @return {Object} An object with .row and .column integer properties.\n   */\n  getZoneCoordinates( x, y ) {\n    const { top, left } = this.el.getBoundingClientRect();\n    const { height, width } = this.getZoneDimensions();\n\n    return {\n      col: Math.floor( ( x - left ) / width ),\n      row: Math.floor( ( y - top ) / height ),\n    };\n  }\n\n  /**\n   * Get the zone string corresponding to a pair of x & y input coordinates.\n   *\n   * @param {Number} x The clientX position value.\n   * @param {Number} y The clientY position value.\n   * @return {String}\n   */\n  getZone( x, y ) {\n    const { zones } = this.props;\n    const { row, col } = this.getZoneCoordinates( x, y );\n\n    return zones[ row ][ col ];\n  }\n\n  onDrag( clientX, clientY ) {\n    if ( ! this.state.dragging || typeof this.props.onDrag !== 'function' ) {\n      return;\n    }\n    this.props.onDrag( this.state.dragging, [\n      clientX - this.x,\n      clientY - this.y,\n    ] );\n  }\n\n  onMouseDown( evt ) {\n    this.setState( {\n      dragging: this.getZone( evt.clientX, evt.clientY ),\n      preview: null,\n    } );\n    this.x = evt.clientX;\n    this.y = evt.clientY;\n  }\n\n  onMouseMove( evt ) {\n    if ( ! this.state.dragging ) {\n      const { width, height } = this.getZoneDimensions();\n      const { col, row } = this.getZoneCoordinates( evt.clientX, evt.clientY );\n      // Get the x & y of the top-left corner of the active zone.\n      const x = width * col;\n      const y = height * row;\n      this.setState( {\n        preview: {\n          x,\n          y,\n        },\n      } );\n    } else {\n      this.onDrag( evt.clientX, evt.clientY );\n      // What is new becomes old\n      this.x = evt.clientX;\n      this.y = evt.clientY;\n    }\n  }\n\n  onMouseUp( evt ) {\n    if ( this.state.dragging ) {\n      this.onDrag( evt.clientX, evt.clientY );\n    }\n    this.setState( {\n      dragging: false,\n    } );\n  }\n\n  renderPreview() {\n    const { preview, dragging } = this.state;\n    if ( dragging || ! preview ) {\n      return null;\n    }\n    const { width, height } = this.getZoneDimensions();\n    return (\n      <div\n        className=\"dragzone__preview\"\n        style={ {\n          top: preview.y,\n          left: preview.x,\n          width,\n          height,\n        } }\n      />\n    )\n  }\n\n  render() {\n    const { className } = this.props;\n    const { dragging } = this.state;\n    return (\n      <div\n        ref={ node => { this.el = node; } }\n        className={ classNames( className, { dragging } ) }\n        onMouseDown={ this.onMouseDown }\n        onMouseMove={ this.onMouseMove }\n        onMouseUp={ this.onMouseUp }\n      >\n        { this.renderPreview() }\n      </div>\n    );\n  }\n}\n\nDragZone.propTypes = {\n  className: PropTypes.string.isRequired,\n  zones: PropTypes.arrayOf( PropTypes.arrayOf( PropTypes.string ) ).isRequired,\n  onDrag: PropTypes.func.isRequired,\n};\n\nexport default DragZone;","import React, { PureComponent } from 'react';\n\nimport DragZone from '../DragZone';\n\nimport './style.css';\n\nconst numeric = window.numeric;\n\nconst pairToPoint = ( [ x, y ] ) => ( { x, y } );\n\n/**\n * Generate the transformation array.\n *\n * @param {Object[]} fromPoint Array of { x, y } objects representing the original corners.\n * @param {Object[]} toPoint   Array of { x, y } objects representing the transformed corners.\n */\nconst calculateMatrix = ( fromPoint, toPoint ) => {\n  // Adapted from https://franklinta.com/2014/09/08/computing-css-matrix3d-transforms/\n  // console.assert( fromPoint.length === 4 & toPoint.length === 4 );\n\n  // Creates 8x8 array.\n  const A = fromPoint.reduce( ( memo, { x, y }, idx ) => {\n    const to = toPoint[ idx ];\n    return [\n      ...memo,\n      [x, y, 1, 0, 0, 0, -x * to.x, -y * to.x ],\n      [0, 0, 0, x, y, 1, -x * to.y, -y * to.y ],\n    ];\n  }, [] );\n\n  const B = toPoint.reduce(\n    ( memo, { x, y } ) => [ ...memo, x, y ],\n    []\n  );\n\n  // Solve A * h = B for h\n  const h = numeric.solve( A, B );\n\n  const H = [\n    [ h[0], h[1], 0, h[2] ],\n    [ h[3], h[4], 0, h[5] ],\n    [    0,    0, 1,    0 ],\n    [ h[6], h[7], 0,    1 ],\n  ];\n \n  // // Sanity check that H actually maps `fromPoint` to `toPoint`\n  // // TODO: Try disabling for performance?\n  // for ( let i = 0; i < 4; i++ ) {\n  //   const { x: fromX, y: fromY } = fromPoint[ i ];\n  //   const { x: toX, y: toY } = toPoint[ i ];\n  //   const lhs = numeric.dot( H, [ fromX, fromY, 0, 1 ] );\n  //   const k_i = lhs[ 3 ];\n  //   const rhs = numeric.dot( k_i, [ toX, toY, 0, 1 ] );\n  //   console.assert( numeric.norm2( numeric.sub( lhs, rhs ) ) < 1e-9, \"Not equal:\", lhs, rhs );\n  // }\n\n  return H;\n};\n\n/**\n * Render a matrix3d transform string.\n *\n * @param {Object} transforms Transforms object.\n * @param {Number} width      The image width.\n * @param {Height} height     The image height.\n * @return {String} matrix3d transform string.\n */\nconst getTransform = ( transforms, width, height ) => {\n  // Both fromPoint and toPoint must be ordered the same\n  // (top left, bottom left, top right, bottom right)\n  const fromPoint = [\n    { x: 0, y: 0 },\n    { x: 0, y: height },\n    { x: width, y: 0 },\n    { x: width, y: height },\n  ];\n  const toPoint = [\n    transforms.tl,\n    transforms.bl,\n    transforms.tr,\n    transforms.br,\n  ].map( ( delta, idx ) => {\n    const original = fromPoint[ idx ];\n    return {\n      x: original.x + delta.x,\n      y: original.y + delta.y,\n    };\n  } );\n\n  // Calculate transformation matrix and reduce to matrix3d transform syntax.\n  const H = calculateMatrix( fromPoint, toPoint );\n\n  let matrix3d = [];\n  for ( let col = 0; col < 4; col++ ) {\n    for ( let row = 0; row < 4; row++ ) {\n      matrix3d.push( H[row][col] );\n    }\n  }\n  return `matrix3d(${ matrix3d.join( ',' ) })`;\n}\n\nclass Skewer extends PureComponent {\n  constructor( props ) {\n    super( props );\n    this.state = {\n      transforms: {\n        tl: pairToPoint( [ 0, 0 ] ),\n        tr: pairToPoint( [ 0, 0 ] ),\n        br: pairToPoint( [ 0, 0 ] ),\n        bl: pairToPoint( [ 0, 0 ] ),\n      },\n    };\n\n    this.move = this.move.bind( this );\n  }\n\n  setComputedImageSize( node ) {\n    if ( this.computedImageWidth && this.computedImageHeight ) {\n      return;\n    }\n    const { width, height } = node.getBoundingClientRect();\n    this.computedImageWidth = width;\n    this.computedImageHeight = height;\n  }\n\n  move( corner, [ dx, dy ] ) {\n    if ( ! [ 'tr', 'tl', 'br', 'bl' ].includes( corner ) ) {\n      // Don't throw because it paradoxically makes it harder for me to debug.\n      console.error( `Invalid corner \"${ corner }\"! Specify one of \"tl\", \"tr\", \"br\", or \"bl\"` );\n      return;\n    }\n    const { transforms } = this.state;\n    const { x, y } = transforms[ corner ];\n\n    this.setState( {\n      transforms: {\n        ...transforms,\n        [ corner ]: {\n          x: x + dx,\n          y: y + dy,\n        },\n      },\n    } );\n  }\n\n  getTransform() {\n    const { transforms } = this.state;\n    const width = this.computedImageWidth;\n    const height = this.computedImageHeight;\n\n    if ( ! ( width && height ) ) {\n      return 'initial';\n    }\n\n    // Call out to the pure function defined above.\n    return getTransform( transforms, width, height );\n  }\n\n  render() {\n    if ( ! this.props.image ) {\n      return null;\n    }\n    const { src, width, height } = this.props.image;\n    return (\n      <div className=\"skewer\">\n        <DragZone\n          className=\"dragzone dragzone--tr\"\n          zones={ [\n            [ 'tl', 'tr' ],\n            [ 'bl', 'br' ],\n          ] }\n          onDrag={ this.move }\n        />\n        <img\n          alt=\"skewable\"\n          ref={ node => this.setComputedImageSize( node ) }\n          style={ {\n            transform: this.getTransform(),\n          } }\n          src={ src }\n          width={ width }\n          height={ height }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Skewer;","import React, { Component } from 'react';\nimport './App.css';\nimport DropZone from './components/DropZone';\nimport Skewer from './components/Skewer';\n\nclass App extends Component {\n  constructor( props ) {\n    super( props );\n    this.state = {\n      image: null,\n    };\n    this.setImage = this.setImage.bind( this );\n  }\n\n  setImage( image ) {\n    console.log( image );\n    this.setState( {\n      image,\n    } );\n  }\n\n  render() {\n    const { image } = this.state;\n    console.log( image );\n    return (\n      <div className=\"App\">\n        { image ? (\n          <Skewer image={ image } />\n        ) : (\n          <header className=\"App-header\">\n            <h1>Image Kebab<em>!</em></h1>\n            <DropZone onDrop={ this.setImage } />\n            <p>Drag-and-drop the image to skewer into the box above.</p>\n        \n            <small className=\"attribution\">\n              <a href=\"https://www.vexels.com/vectors/preview/132102/shish-kebab-icon\">Shish kebab icon</a> designed by Vexels\n            </small>\n          </header>\n        ) }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}